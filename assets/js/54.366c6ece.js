(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{298:function(t,_,v){"use strict";v.r(_);var e=v(28),o=Object(e.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"_5-0-控制结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-0-控制结构"}},[t._v("#")]),t._v(" 5.0 控制结构")]),t._v(" "),v("p",[t._v("到目前为止，我们看到的 Go 程序都是从 main() 函数开始执行，然后按顺序执行该函数体中的代码。但我们经常会需要只有在满足一些特定情况时才执行某些代码，也就是说在代码里进行条件判断。针对这种需求，Go 提供了下面这些条件结构和分支结构：")]),t._v(" "),v("ul",[v("li",[t._v("if-else 结构")]),t._v(" "),v("li",[t._v("switch 结构")]),t._v(" "),v("li",[t._v("select 结构，用于 channel 的选择（第 14.4 节）")])]),t._v(" "),v("p",[t._v("可以使用迭代或循环结构来重复执行一次或多次某段代码（任务）：")]),t._v(" "),v("ul",[v("li",[t._v("for (range) 结构")])]),t._v(" "),v("p",[t._v("一些如 "),v("code",[t._v("break")]),t._v(" 和 "),v("code",[t._v("continue")]),t._v(" 这样的关键字可以用于中途改变循环的状态。")]),t._v(" "),v("p",[t._v("此外，你还可以使用 "),v("code",[t._v("return")]),t._v(" 来结束某个函数的执行，或使用 "),v("code",[t._v("goto")]),t._v(" 和标签来调整程序的执行位置。")]),t._v(" "),v("p",[t._v("Go 完全省略了 "),v("code",[t._v("if")]),t._v("、"),v("code",[t._v("switch")]),t._v(" 和 "),v("code",[t._v("for")]),t._v(" 结构中条件语句两侧的括号，相比 Java、C++ 和 C# 中减少了很多视觉混乱的因素，同时也使你的代码更加简洁。")]),t._v(" "),v("h2",{attrs:{id:"链接"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[t._v("#")]),t._v(" 链接")]),t._v(" "),v("ul",[v("li",[v("RouterLink",{attrs:{to:"/go-doc/directory.html"}},[t._v("目录")])],1),t._v(" "),v("li",[t._v("上一章："),v("RouterLink",{attrs:{to:"/go-doc/04.9.html"}},[t._v("指针")])],1),t._v(" "),v("li",[t._v("下一节："),v("RouterLink",{attrs:{to:"/go-doc/05.1.html"}},[t._v("if-else 结构")])],1)])])}),[],!1,null,null,null);_.default=o.exports}}]);